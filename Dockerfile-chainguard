
FROM cgr.dev/chainguard/wolfi-base as build

RUN apk update && \
    apk add gcc glibc-dev ninja cmake pkgconf libsystemd libzstd1 \
    zlib openssl-dev cyrus-sasl-dev git perl-dev


# Install the latest Mongo driver
WORKDIR /build/mongo
ADD https://github.com/mongodb/mongo-c-driver/releases/download/1.23.5/mongo-c-driver-1.23.5.tar.gz c-driver.tar.gz
ADD https://github.com/mongodb/mongo-cxx-driver/releases/download/r3.7.2/mongo-cxx-driver-r3.7.2.tar.gz cxx-driver.tar.gz
RUN tar -xzvf c-driver.tar.gz && tar -xzvf cxx-driver.tar.gz

RUN cd mongo-c-driver-1.23.5/build && \
    cmake -DENABLE_STATIC=ON -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DCMAKE_MAKE_PROGRAM=ninja -G Ninja .. && \
    ninja && \
    ninja install

RUN cd mongo-cxx-driver-r3.7.2/build && \
    cmake -DENABLE_STATIC=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DCMAKE_MAKE_PROGRAM=ninja -G Ninja .. && \
    ninja && \
    ninja install


# SDL
WORKDIR /build/sdl
ADD https://github.com/libsdl-org/SDL/archive/refs/tags/release-2.26.5.tar.gz .
RUN tar -xzvf release-2.26.5.tar.gz && cd SDL-release-2.26.5 && \
    mkdir build && cd build && \
    cmake -DENABLE_STATIC=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DCMAKE_MAKE_PROGRAM=ninja -G Ninja .. && \
    ninja && ninja install

WORKDIR /build/sdl_mixer
ADD https://github.com/libsdl-org/SDL_mixer/archive/refs/tags/release-2.6.3.tar.gz .
RUN tar -xzvf release-2.6.3.tar.gz && cd SDL_mixer-release-2.6.3 && \
    mkdir build && cd build && \
    cmake -DENABLE_STATIC=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DCMAKE_MAKE_PROGRAM=ninja -G Ninja .. && \
    ninja && ninja install





# Build our stuff
WORKDIR /build/creature-server
COPY src/ src
COPY messaging/ messaging
COPY CMakeLists.txt .
RUN ls -lart /build/creature-server/
RUN mkdir build && \
    cd build && \
    cmake   -DCMAKE_MAKE_PROGRAM=ninja -G Ninja \
            -DgRPC_ABSL_PROVIDER=module \
            -DgRPC_CARES_PROVIDER=module \
            -DgRPC_PROTOBUF_PROVIDER=module \
            -DgRPC_RE2_PROVIDER=module \
            -DgRPC_SSL_PROVIDER=module \
            -DgRPC_ZLIB_PROVIDER=module \
            -DgRPC_INSTALL=ON \
            -DCMAKE_BUILD_TYPE=Release \
        -DENABLE_STATIC=ON \
    -DCMAKE_INSTALL_PREFIX=/app \
     .. && \
    ninja


# Now build a small runtime
FROM cgr.dev/chainguard/wolfi-base:latest as runtime

# Some of our libs need runtime bits
RUN apk update && \
    apk add libsystemd libzstd1 zlib openssl cyrus-sasl glibc-locale-en

#RUN mkdir /app
COPY --from=build /app /app
COPY --from=build /build/creature-server/build/creature-server /app/creature-server

EXPOSE 6666

CMD ["/app/creature-server"]
