syntax = "proto3";

option go_package = "opsnlops.io/creatures/server";
option java_multiple_files = true;
option java_package = "io.opsnlops.creatures.server";
option java_outer_classname = "NetworkServerProto";

package server;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// TODO: This might be helpful later!
// import "google/protobuf/wrappers.proto";

service CreatureServer {

  // Fetches one from the database
  rpc GetCreature (CreatureName) returns (Creature) {}

  // Get all of them
  rpc GetCreatures (google.protobuf.Empty) returns (stream Creature) {}

  // Create a new creature in the database
  rpc CreateCreature(Creature) returns (DatabaseInfo) {}

  // Update an existing creature in the database
  rpc UpdateCreature(Creature) returns (DatabaseInfo) {}

}

message DatabaseInfo {

  string message = 1;
  string help = 2;

}

message CreatureName {
  string name = 1;
}

message Creature {
  string name = 1;   // MongoDB _id field
  google.protobuf.Timestamp last_updated = 2;
  string sacn_ip = 3;
  uint32 universe = 4;
  uint32 dmx_base = 5;
  uint32 number_of_motors = 6;

  enum MotorType {
    SERVO = 0;
    STEPPER = 1;
  }

  message Motor {
    MotorType type = 1;
    uint32 number = 2;
    uint32 max_value = 3;
    uint32 min_value = 4;
    double smoothing_value = 5;
  }

  repeated Motor motors = 7;

}
